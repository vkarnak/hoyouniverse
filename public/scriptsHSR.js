function changeContent(section) {
  const content = document.getElementById("main-content");

  switch (section) {
    case "Plot":
      content.innerHTML = /*html*/ `
        <h1>Plot</h1>
        <p>The Herta Space Station is attacked by members of the Antimatter Legion, 
          followers of the Path of Destruction. Amidst the chaos, two Stellaron Hunters, Kafka and Silver Wolf, 
          infiltrate the station and steal the Stellaron that was being safely held within it. Kafka takes hold 
          of the Stellaron and inserts it into the body of an empty vessel generated by Silver Wolf (whose gender 
          and name are chosen by the player). The vessel (known as the Trailblazer in English and various other 
          names in other translations of the game) awakens, after which Kafka erases their memory, informs them 
          of the future that lies ahead, and leaves. They then fall unconscious. <br>A now-amnesic Trailblazer 
          wakes up and meets March 7th and Dan Heng. Both are traveling on the Astral Express, a large cosmic 
          train that travels the universe along the eponymous "Star Rail". After eliminating the remaining threats 
          from the Antimatter Legion, the Trailblazer meets Himeko, the Navigator of the Astral Express, and Welt 
          Yang, an interstellar traveler originating from the world of 
          <a href= "https://en.wikipedia.org/wiki/Honkai_Impact_3rd">Honkai Impact 3rd</a>. 
          In an attempt to discover their origins and eliminate the threats of the remaining Stellarons, 
          the Trailblazer departs with the Astral Express crew.</p>`;
      break;

    case "Locations":
      content.innerHTML = `
          <h1>Locations</h1>
          <p>Explore the different locations in Space, each with its unique culture and mysteries.</p>
          <div class="locations">
          <button class="location-btn" data-location="Herta Space Station"><img src="Herta Space Station.png" class="location-image"></button>          
          <button class="location-btn" data-location="Jarilo-VI"><img src="Jarilo-VI.png" class="location-image"></button>
          <button class="location-btn" data-location="Xianzhou Luofu"><img src="Xianzhou Luofu.png" class="location-image"></button>
          <button class="location-btn" data-location="Penacony"><img src="Penacony.png" class="location-image"></button>
          </div>
          <div id="location-content" class="location-content"></div>
        `;

      // Attach click event for each location button
      const locationButtons = document.querySelectorAll(".location-btn");
      locationButtons.forEach((button) => {
        button.addEventListener("click", function () {
          const location = this.dataset.location; // Using 'data-location' for location data

          let locationText = "";
          if (location === "Herta Space Station") {
            locationText =
              "<h3>Herta Space Station</h3><p>Herta Space Station is a space station founded by Herta, member #83 of the Genius Society. Researchers from different planets comes to work here as a researcher and most of them are faithful followers of Herta. Qualifying for a researcher role in the Herta Space Station is a hard process and is a cherished goal of the scientific community.</p>";
          } else if (location === "Jarilo-VI") {
            locationText =
              "<h3>Jarilo-VI</h3><p>Jarilo-VI is a planet that is frosted over due to the Eternal Freeze as a product of the Stellaron's effect on the planet. Its name may possibly be a mistranslation that has a poetry stanza number. Belobog currently stands as its only bastion where humanity thrives amidst the harsh climate.</p>";
          } else if (location === "Xianzhou Luofu") {
            locationText =
              "<h3>The Xianzhou Luofu</h3><p>The Xianzhou Luofu is one of the six Flagships owned by the Hexafleet of the Xianzhou Alliance. It sails like a one-way arrow through the galaxy, with the goal of eradicating Denizens of Abundance. The Luofu stands out among the other ships for its medical treatment and trade. People on the Luofu are considered laid-back compared to other ships.</p>";
          } else if (location === "Penacony") {
            locationText =
              "<h3>Penacony</h3><p>Penacony, also known as the 'Planet of Festivities', is a planet currently administered by The Family in the Asdana star system.</p>";
          }

          // Update the content of the location content area
          const locationContent = document.getElementById("location-content");
          locationContent.innerHTML = locationText;

          // Slide the region content in or out
          $(locationContent).stop(true, true).slideToggle(); // stop any ongoing animations and toggle visibility
        });
      });
      break;

    case "Characters":
      content.innerHTML = /*html*/ `
        <div class="filters">
          <select id="filter-element" onchange="applyFilters()">
            <option value="">All Elements</option>
            <option value="Physical">Physical</option>
            <option value="Fire">Fire</option>
            <option value="Ice">Ice</option>
            <option value="Lightning">Lightning</option>
            <option value="Wind">Wind</option>
            <option value="Imaginary">Imaginary</option>
            <option value="Quantum">Quantum</option>
          </select>
          <select id="filter-path" onchange="applyFilters()">
            <option value="">All Paths</option>
            <option value="Destruction">Destruction</option>
            <option value="Hunt">Hunt</option>
            <option value="Preservation">Preservation</option>
            <option value="Abundance">Abundance</option>
            <option value="Erudition">Erudition</option>
            <option value="Harmony">Harmony</option>
            <option value="Nihility">Nihility</option>
          </select>
          <select id="filter-stars" onchange="applyFilters()">
            <option value="">All Stars</option>
            <option value="5">5 Stars</option>
            <option value="4">4 Stars</option>
          </select>
        </div>
        <div id="character-grid" class="row"></div>
      `;

      fetch("/charactersHSR")
        .then((response) => response.json())
        .then((data) => {
          // Сохраняем данные в глобальной переменной для фильтров
          window.characterData = data;
          renderCharacterGrid(data);
        })
        .catch((error) => {
          console.error("Error loading characters:", error);
        });
      break;
  }
}

function renderCharacterGrid(data) {
  const grid = document.getElementById("character-grid");
  grid.innerHTML = "";

  const characterHTML = data
    .map((character) => {
      return /*html*/ `
      <div class="col-6 col-md-3 mb-4"
              data-bs-toggle="popover"
              data-bs-placement="auto" 
              data-bs-boundary="window" 
              data-bs-trigger="hover focus"
              title="${character.name}"
              data-bs-content="<img src='/images/guides/${character.name}.png' >">
                          <div class="character-info">
              <img src="/images/characters/${character.name}.png" alt="${character.name}" class="img-fluid">
              <img src="/images/stars/${character.stars}.png" alt="${character.stars}" class="img-fluid"><br>
              <img src="/images/elements/${character.element}.png" alt="${character.element}" class="img-fluid" style="width: 50px; height: 50px; object-fit: cover;">
              <img src="/images/path/${character.path}.png" alt="${character.path}" class="img-fluid" style="width: 50px; height: 50px; object-fit: cover;">
            </div>
      </div>`;
    })
    .join("");
  grid.innerHTML = characterHTML;

  var popoverTriggerList = document.querySelectorAll(
    '[data-bs-toggle="popover"]'
  );
  popoverTriggerList.forEach((popoverTrigger) => {
    new bootstrap.Popover(popoverTrigger, {
      html: true,
      fallbackPlacements: ["top", "left", "right", "bottom"],
    });
  });
}

function applyFilters() {
  const element = document.getElementById("filter-element").value;
  const path = document.getElementById("filter-path").value;
  const stars = document.getElementById("filter-stars").value;

  const filteredData = window.characterData.filter((character) => {
    return (
      (!element || character.element === element) &&
      (!path || character.path === path) &&
      (!stars || character.stars.toString() === stars)
    );
  });

  renderCharacterGrid(filteredData);
}
